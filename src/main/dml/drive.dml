package pt.tecnico.myDrive.domain;

class User {
  String name;
  String username;
  String password;
}

class SuperUser extends User;

class Guest extends User;

class Manager {
  int lastFileId;
}

relation ManagerContainsUser {
  Manager playsRole managerU {
    multiplicity 1;
  }
  User playsRole Users {
    multiplicity 0..*;
  }
}


class Permissions {
    short umask;
}

class File {
    int id;
    String name;
    DateTime modified;
}

relation FileHasPermissions {
    File playsRole file { multiplicity 1; }
    Permissions playsRole permissions { multiplicity 1; }
}

relation UserHasFile {
    User playsRole owner { multiplicity 1; }
    File playsRole file { multiplicity *; }
}

relation UserHasPermissions {
    User playsRole user { multiplicity 1; }
    Permissions playsRole permissions { multiplicity 1; }
}

class PlainFile extends File {
    String content;
}

class Directory extends File;

relation DirectoryContainsFile {
    Directory playsRole parent { multiplicity 1; }
    File playsRole file { multiplicity *; }
}

relation UserHasHome {
    User playsRole user { multiplicity 1; }
    Directory playsRole home { multiplicity 1; }
}

class Extension {
    String name;
}


class EnvironmentVariable {
    String name;
    String value;
}

class Session {
    String token;
    DateTime lastActive;
}

relation SessionHasCurrentDirectory {
    Session playsRole session { multiplicity *; }
    Directory playsRole currentDirectory { multiplicity 1; }
}

relation UserOwnsSession {
    User playsRole user { multiplicity 1; }
    Session playsRole session { multiplicity *; }
}

relation SessionHasEnvironmentVariables {
    Session playsRole session { multiplicity 1; }
    EnvironmentVariable playsRole envVar { multiplicity *; }
}

relation UserHasExtensions {
    User playsRole user { multiplicity 1; }
    Extension playsRole extension { multiplicity *; }
}

relation FileHasExtensions {
    File playsRole file { multiplicity 0..1; }
    Extension playsRole extension { multiplicity 1; }
}


class RootDirectory extends Directory;

class Link extends PlainFile;

class App extends PlainFile;

relation DomainRootHasManager {
  .pt.ist.fenixframework.DomainRoot playsRole root { multiplicity 0..1; }
  Manager playsRole manager { multiplicity 0..1; }
}

relation ManagerHasHome {
    Manager playsRole manager { multiplicity 1; }
    RootDirectory playsRole home { multiplicity 0..1; }
}